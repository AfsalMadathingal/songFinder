<link rel="stylesheet" href="/style/style.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<div class="main-div">
<div id="record-button" class="container">

  <span class="sun sunshine"></span>
  <span class="sun">
    <h4 class="text">Tap Here <br> To Find Music <br> Around You </h4>
  </span>

</div>

<div class="spinner-container">
  <div class="spinner">
    <div class="spinner">
      <div class="spinner">
        <div class="spinner">
          <div class="spinner">
            <div class="spinner"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="card">
  <button class="card__btn card__btn-menu">
    <svg fill="none" height="18" viewBox="0 0 24 18" width="24" xmlns="http://www.w3.org/2000/svg">
      <path d="m0 0h24v3h-12-12zm0 7.5h24v3h-24zm0 7.5h24v3h-24z" fill="#fff"></path>
    </svg>
  </button>
  <div class="card__img">
  </div>
  <div class="card__title">NotFound</div>
  <div class="card__subtitle">Smalltown Boy , Shane D</div>
  <div class="card__wrapper">
    <div class="card__time card__time-passed">03:34</div>
    <div class="card__timeline"><progress value="55" max="100"></progress></div>
    <div class="card__time card__time-left">02:04</div>
  </div>
  <div class="card__wrapper">
    <button class="card__btn"><svg fill="none" height="12" viewBox="0 0 20 12" width="20"
        xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <clipPath id="a">
          <path d="m0 0h20v12h-20z"></path>
        </clipPath>
        <g>
          <path
            d="m17 1c0-.265216-.1054-.51957-.2929-.707107-.1875-.187536-.4419-.292893-.7071-.292893h-8v2h7v5h-3l3.969 5 4.031-5h-3zm-14 10c0 .2652.10536.5196.29289.7071.18754.1875.44189.2929.70711.2929h8v-2h-7v-5h3l-4-5-4 5h3z"
            fill="#fff"></path>
        </g>
      </svg></button>
    <button class="card__btn"><svg width="23" height="16" viewBox="0 0 23 16" fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path d="M11.5 8V0L0 8L11.5 16V8ZM23 0L11.5 8L23 16V0Z" fill="#fff"></path>
      </svg></button>
    <button class="card__btn card__btn-play"><svg fill="none" height="22" viewBox="0 0 18 22" width="18"
        xmlns="http://www.w3.org/2000/svg">
        <path d="m0 0v22l18-11z" fill="#000"></path>
      </svg></button>
    <button class="card__btn"><svg width="23" height="16" viewBox="0 0 23 16" fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <path d="M11.5 8V0L23 8L11.5 16V8ZM0 0L11.5 8L0 16V0Z" fill="#fff"></path>
      </svg></button>
    <button class="card__btn"><svg fill="#fff" height="20" viewBox="0 0 20 20" width="20"
        xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <clipPath id="a">
          <path d="m0 .5h20v19h-20z"></path>
        </clipPath>
        <g fill="#fff">
          <path
            d="m15 14.5h-1.559l-9.7-10.673c-.09376-.10305-.20802-.18536-.33545-.24168-.12744-.05631-.26523-.08537-.40455-.08532h-3.001v2h2.559l4.09 4.5-4.09 4.501h-2.559v2h3.001c.13932 0 .27711-.029.40455-.0853.12743-.0563.24169-.1387.33545-.2417l4.259-4.687 4.259 4.686c.0938.103.208.1854.3355.2417.1274.0563.2652.0853.4045.0853h2.001v3l5-4-5-4z">
          </path>
          <path
            d="m13.4406 5.5h1.559v3l5-3.938-5-4.062v3h-2.001c-.1393-.00005-.2771.02901-.4045.08532-.1275.05632-.2417.13863-.3355.24168l-3.36798 3.707 1.47998 1.346z">
          </path>
        </g>
      </svg></button>
  </div>
</div>

<div class="footer">
  <div class="footer__text">
 <h6>Created By Afsal Madathingal </h6>
  </div>
 <div class="footer__icons">
  <a href="http://github.com/afsalmadathingal"><i class="fa-brands fa-linkedin"></i></a>
 <a href="https://www.linkedin.com/in/afsalmadathingal/"><i class="fa-brands fa-github"></i></a>
 </div>
</div>

</div>
<script type="module">

  import { WavRecorder } from 'https://cdn.jsdelivr.net/npm/webm-to-wav-converter/+esm';
  const startRecordingButton = document.getElementById('record-button');
  const card = document.querySelector('.card');
  const musicTitle = document.querySelector('.card__title');
  const subtitle = document.querySelector('.card__subtitle');
  const cardimg = document.querySelector('.card__img');

  let recordingTimeout;

  function startRecording() {

    const container = document.getElementById('record-button');
    container.style.filter = 'blur(10px)';
    const spinner = document.getElementsByClassName('spinner-container');
    spinner[0].style.display = 'block';
    startRecordingButton.disabled = true;
    startRecordingButton.classList.add('recording');

    navigator.mediaDevices.getUserMedia({ audio: true })
      .then((stream) => {
        const mediaRecorder = new MediaRecorder(stream);
        const audioChunks = [];

        mediaRecorder.addEventListener('dataavailable', (event) => {
          audioChunks.push(event.data);
        });

        mediaRecorder.addEventListener('stop', () => {
          const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
          sendAudioToServer(audioBlob);
        });

        mediaRecorder.start();

        recordingTimeout = setTimeout(() => {
          mediaRecorder.stop();
          container.style.filter = 'blur(0px)';
          spinner[0].style.display = 'none';
        }, 10000); 
      })
      .catch((error) => {
        console.error('Error accessing microphone:', error);
        startRecordingButton.disabled = false;
        startRecordingButton.classList.remove('recording');
      });
  }

  function sendAudioToServer(audioBlob) {
    if (audioBlob.size === 0) {
      console.error('Audio Blob is empty.');
      return;
    }

    const formData = new FormData();
    formData.append('audio', audioBlob);

    fetch('/upload-audio', {
      method: 'POST',
      body: formData,
    }).then((response) => response.json())
      .then((response) => {

        console.log(response);
        if(response?.success === false){
          swal("Error", "Music Not Found Try Again", "error");
          return 
        }
        card.style.backgroundImage = `url(${response.data.share.image})`;

        card.style.background = `
        linear-gradient(
          rgba(0, 0, 0, 0.5), 
          rgba(0, 0, 0, 0.5)
        ), 
        url(${response.data.share.image})`;
        card.style.backgroundSize = 'cover'

        cardimg.style.backgroundImage = `url(${response.data.share.image})`;
        cardimg.style.backgroundSize = 'cover'
        musicTitle.innerHTML = response.data.share.text;
        subtitle.innerHTML = response.data.share.title;
        card.style.display = 'block';
        console.log('Audio sent to server successfully');

      })
      .catch((error) => {
        console.error('Error sending audio to server:', error);
      });
  }

  startRecordingButton.addEventListener('click', startRecording);
</script>

